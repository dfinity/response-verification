name: Release

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"

jobs:
  check_tag:
    name: Check Tag
    runs-on: ubuntu-latest
    outputs:
      match: ${{ steps.check_tag.outputs.match }}
    steps:
      - name: Check Tag
        id: check_tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "match=true" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: check_tag
    if: needs.check_tag.outputs.match == "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Create Cargo crate release
        run: cargo publish --dry-run -p ic-response-verification

      - name: Create NPM package release
        run: ./scripts/package.sh

      - name: Create Github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: >
            packages/ic-response-verification/target/package/ic-response-verification-${{ steps.cz.outputs.version }}.crate
            dfinity-response-verification-${{ steps.cz.outputs.version }}.tgz
          bodyFile: "RELEASE_NOTES.md"
          tag: "${{ steps.cz.outputs.version }}"
          commit: "main"
