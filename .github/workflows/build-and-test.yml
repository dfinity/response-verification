name: build_and_test

on:
  push:
    branches:
      - main
  merge_group:
  pull_request:

concurrency:
  group: pr-${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

env:
  SCCACHE_GHA_ENABLED: 'true'
  RUSTC_WRAPPER: 'sccache'

jobs:
  build_and_test_rust:
    name: build_and_test_rust:required
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Build Cargo crates
        run: cargo build --release

      - name: Test Cargo crates
        run: cargo test --all-features

      - name: Build Cargo docs
        run: cargo doc --no-deps

      - name: Lint Rust
        run: cargo clippy --all-targets --all-features

      - name: Check Rust formatting
        run: cargo fmt --all -- --check

  build_and_test_js:
    name: build_and_test_js:required
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main

      - name: Setup DFX
        uses: dfinity/setup-dfx@main
        with:
          dfx-version: 'auto'

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

        # Triggers installation of the Rust toolchain
        # Must be done before wasm-pack is installed
      - name: Cargo metadata
        run: cargo metadata --format-version 1

      - name: Setup wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Generate canister declarations
        run: dfx generate

      - name: Build NPM packages
        run: pnpm build

      - name: Build canisters
        run: dfx build --check

      - name: Test NPM packages
        run: pnpm test

      - name: Wasm test
        run: wasm-pack test --node packages/ic-response-verification --features=js

      - name: Check Typescript formatting
        run: pnpm run format:check
